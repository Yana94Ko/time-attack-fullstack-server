// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String     @id
  email             String     @unique
  encryptedPassword String
  profile           Profile?
  createdAt         DateTime   @default(now())
  bookmarks         Bookmark[]
  deals             Deal[]
}

model Profile {
  userId        String    @id
  user          User      @relation(fields: [userId], references: [id])
  nickname      String    @unique
  birth         DateTime?
  profileImgSrc String?
  location      String?
  updatedAt     DateTime  @updatedAt
}

model Deal {
  id             Int           @id @default(autoincrement())
  authorId       String
  author         User          @relation(fields: [authorId], references: [id])
  bookmarksCount Int           @default(0)
  title          String
  content        String
  price          Int
  hit            Int           @default(1)
  imgUrl         String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  bookmarks      Bookmark[]
  dealKeywords   DealKeyword[]
}

model Bookmark {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  deal   Deal   @relation(fields: [dealId], references: [id])
  userId String
  dealId Int

  @@unique([userId, dealId])
}

model Keyword {
  id           Int           @id @default(autoincrement())
  type         String
  dealKeywords DealKeyword[]
}

model DealKeyword {
  id        Int     @id @default(autoincrement())
  keyword   Keyword @relation(fields: [keywordId], references: [id])
  deal      Deal    @relation(fields: [dealId], references: [id])
  keywordId Int
  dealId    Int
}
